<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ibm</groupId>
    <artifactId>IBMEmpleados</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>IBMEmpleados</name>

    <properties>
		<project>IBMEmpleados</project>
		<project.root>${basedir}</project.root>
        <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>7</maven.compiler.source>
        <maven.compiler.target>7</maven.compiler.target>
		<sonar-jacoco-listeners.version>1.4</sonar-jacoco-listeners.version>
<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>

<!-- Jacoco version to use -->

<jacoco.version>0.7.2.201409121644</jacoco.version>
<!-- Don't let Sonar execute tests. We will ask it to Maven 'sonar.dynamicAnalysis' is deprecated since version 4.3 and should no longer be used. -->

<!-- <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis> -->

<!-- The system property jacoco.outputDir needs to be override on the command line

    with an absolute path if you want to merge results from all modules.

    Example in a Jenkisn build where ${WORKSPACE} is defined and your project in the root directory of the workspace :

    mvn clean install -Prun-its,coverage -Djacoco.outputDir=${WORKSPACE}/target

    Note that unfortunately using the following does not work because of

    http://jira.codehaus.org/browse/SONAR-3427:

<jacoco.outputDir>${session.executionRootDirectory}/target/</jacoco.outputDir>

-->

<jacoco.outputDir>${project.build.directory}</jacoco.outputDir>

<!-- Jacoco output file for UTs -->

<jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>

<!-- Tells Sonar where the Jacoco coverage result file is located for Unit Tests -->

<sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>

<!-- Jacoco output file for ITs -->

<jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>

<!-- Tells Sonar where the Jacoco coverage result file is located for Integration Tests -->

<sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath>

<!-- <sonar.junit.reportsPath>${project.build.directory}/surefire-reports/</sonar.junit.reportsPath> -->

<!-- <sonar.tests>src/test/java</sonar.tests> -->

<!-- === END of Sonar/Reporting settings === -->
    </properties>
    
    <dependencies>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>7.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.45</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
        </dependency>

        <dependency>
            <groupId>org.codehaus.sonar-plugins.java</groupId>
            <artifactId>sonar-jacoco-listeners</artifactId>
            <version>${sonar-jacoco-listeners.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>
<profiles>
    <profile>
        <id>coverage</id>
        <build>
            <plugins>
                
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                    <configuration>
                        <source>1.7</source>
                        <target>1.7</target>
                        <compilerArguments>
                            <endorseddirs>${endorsed.dir}</endorseddirs>
                        </compilerArguments>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <argLine>${jacoco.agent.ut.arg}</argLine>
                        <!-- Specific to generate mapping between tests and covered code -->
                        <properties>
                            <property>
                                <name>listener</name>
                                <value>org.sonar.java.jacoco.JUnitListener</value>
                            </property>
                        </properties>
                        <!-- test failure ignore -->
                        <testFailureIgnore>true</testFailureIgnore>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <configuration>
                        <argLine>-Xmx1024m -XX:MaxPermSize=256m ${jacoco.agent.it.arg}
                        </argLine>
                        <!-- Specific to generate mapping between tests and covered code -->
                        <properties>
                            <property>
                                <name>listener</name>
                                <value>org.sonar.java.jacoco.JUnitListener</value>
                            </property>
                        </properties>
                        <!-- Let's put failsafe reports with surefire to have access to tests 
                            failures/success reports in sonar -->
                        <reportsDirectory>${project.build.directory}/surefire-reports
                        </reportsDirectory>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.3</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.6</version>
                    <executions>
                        <execution>
                            <phase>validate</phase>
                            <goals>
                                <goal>copy</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${endorsed.dir}</outputDirectory>
                                <silent>true</silent>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>javax</groupId>
                                        <artifactId>javaee-endorsed-api</artifactId>
                                        <version>7.0</version>
                                        <type>jar</type>
                                    </artifactItem>
                                </artifactItems>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                    <executions>
                        <!-- Prepares a variable, jacoco.agent.ut.arg, that contains the info 
                            to be passed to the JVM hosting the code being tested. -->
                        <execution>
                            <id>prepare-ut-agent</id>
                            <phase>process-test-classes</phase>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <destFile>${sonar.jacoco.reportPath}</destFile>
                                <propertyName>jacoco.agent.ut.arg</propertyName>
                                <append>true</append>
                            </configuration>
                        </execution>
                        <!-- Prepares a variable, jacoco.agent.it.arg, that contains the info 
                            to be passed to the JVM hosting the code being tested. -->
                        <execution>
                            <id>prepare-it-agent</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <destFile>${sonar.jacoco.itReportPath}</destFile>
                                <propertyName>jacoco.agent.it.arg</propertyName>
                                <append>true</append>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </build>
    <profile>
        <id>run-its</id>
        <build>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <phase>integration-test</phase>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>verify</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </build>
    </profile>
    </profiles>
    <distributionManagement>
        <repository>
            <id>deployment</id>
            <name>Internal Releases</name>
            <url>http://198.11.242.187:8081/repository/maven-release-IBMempleados/</url>
        </repository>
        <snapshotRepository>
            <id>deployment</id>
            <name>Internal Snapshot Releases</name>
            <url>http://198.11.242.187:8081/repository/maven-snapshots-IBMempleados/</url>
        </snapshotRepository>
</distributionManagement>
</project>